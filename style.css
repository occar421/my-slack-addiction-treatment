/* assuming section heading contains [suppressor] suffix */
/* .p-channel_sidebar__static_list__item has `position:absolute` already */
/* As of 2024/01/04, CSS Nesting is not supported in Electron. */

@font-face {
    font-family: "UD デジタル 教科書体 N all";
    src: local("UD デジタル 教科書体 N-R");
    font-weight: 500;
}

@font-face {
    font-family: "UD デジタル 教科書体 N all";
    src: local("UD デジタル 教科書体 N-B");
    font-weight: 600;
}

@font-face {
    font-family: "UD デジタル 教科書体 NP all";
    src: local("UD デジタル 教科書体 NP-R");
    font-weight: 500;
}

@font-face {
    font-family: "UD デジタル 教科書体 NP all";
    src: local("UD デジタル 教科書体 NP-B");
    font-weight: 600;
}

@font-face {
    font-family: "UD デジタル 教科書体 NK all";
    src: local("UD デジタル 教科書体 NK-R");
    font-weight: 500;
}

@font-face {
    font-family: "UD デジタル 教科書体 NK all";
    src: local("UD デジタル 教科書体 NK-B");
    font-weight: 600;
}

[lang=ja-JP] body,
[lang=ja-JP] .c-basic_container,
[lang=ja-JP] .c-texty_input_unstyled,
[lang=ja-JP] .c-menu {
    font-family: Calibri, "UD デジタル 教科書体 NK all", Slack-Lato, Slack-Fractions, appleLogo, sans-serif;
}

code, pre {
    font-family: "Monaspace Neon", "UD デジタル 教科書体 N all", Monaco, Menlo, Consolas, Courier New, monospace !important;
    font-feature-settings: "calt", "liga", "dlig" !important;
}

[lang=ja-JP] .p-rich_text_block {
    font-size: 15px;
    line-height: 1.5;
}

@layer modification {
    @layer remove {
        .p-channel_sidebar__static_list__item:has(> .p-channel_sidebar__section_heading)[aria-label$=\[suppressor\]][aria-expanded=false] ~ .p-channel_sidebar__static_list__item {
            clip: rect(0 0 0 0);
        }

        .p-channel_sidebar__banner--bottom.p-channel_sidebar__banner--unreads {
            clip: rect(0 0 0 0);
        }
    }

    /*noinspection CssUnresolvedCustomProperty*/
    @layer mute {
        .p-client_workspace:has(.p-ia__nav__user > span > span > img:where([data-stringify-emoji=":mobile_phone_off:"])) :where(
        .p-channel_sidebar__list .p-channel_sidebar__channel--unread:not(:has(> .p-channel_sidebar__channel_suffix > .p-channel_sidebar__badge)) .p-channel_sidebar__name,
        .p-channel_sidebar__list .p-channel_sidebar__section_heading--unreads:not(:has(> .p-channel_sidebar__section_heading_right .p-channel_sidebar__badge)) .p-channel_sidebar__section_heading_label--unreads
        ) {
            font-weight: unset !important;
            color: var(--dt_color-content-sec) !important;
        }

        .p-client_workspace:has(.p-ia__nav__user > span > span > img:where([data-stringify-emoji=":mobile_phone_off:"])) :where(
        .p-channel_sidebar__list .p-channel_sidebar__section_heading--unreads:not(:has(> .p-channel_sidebar__section_heading_right .p-channel_sidebar__badge)) .p-channel_sidebar__section_heading_expand_container
        ) {
            color: var(--dt_color-content-sec) !important;
        }
    }

    @layer revert {
        /* if selected channel */
        .p-channel_sidebar__static_list__item:has(> .p-channel_sidebar__channel--selected),
            /* if expanded section */
        .p-channel_sidebar__static_list__item:has(> .p-channel_sidebar__section_heading)[aria-expanded=true],
            /* if collapsed section which has selected channel */
        .p-channel_sidebar__static_list__item:has(> .p-channel_sidebar__section_heading)[aria-expanded=false]:has(+ .p-channel_sidebar__static_list__item .p-channel_sidebar__channel.p-channel_sidebar__channel--selected),
            /* if mentioned channel & section */
        .p-channel_sidebar__static_list__item:has(.p-channel_sidebar__badge),
            /* if section which has mentioned channel */
        .p-channel_sidebar__static_list__item:has(> .p-channel_sidebar__section_heading):has(+ .p-channel_sidebar__static_list__item .p-channel_sidebar__channel .p-channel_sidebar__badge) {
            clip: initial;
        }
    }
}
